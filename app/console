#!/usr/bin/env php
<?php

ini_set('display_errors', 1);
error_reporting(E_ALL);
ini_set('memory_limit','2G');
$now = new \DateTime('now');
ini_set(
        'error_log',
        sprintf(
        '%s/tmp/log/%s.log',
        __DIR__,
        $now->format('Ymd')
));

require_once('vendor/autoload.php');
require_once('bootstrap.php');


use GDPR\Console\Command\ImportNewsletter;
use GDPR\Console\Command\ImportPortalReservation;
use GDPR\Console\Command\ImportABSEnquiry;
use GDPR\Console\Command\ImportStructureReservation;
use GDPR\Console\Command\ImportStoreONE;
use GDPR\Console\Command\GenerateMailUpToken;
use GDPR\Console\Command\GetMailUpToken;
use GDPR\Console\Command\RefreshMailUpToken;
use GDPR\Console\Command\MaintenanceMailUp;
use GDPR\Console\Command\RefreshMailUpResources;
use GDPR\Console\Command\TestMailUp;
use Console\Command\ImportUpgrade;
use Symfony\Component\Console\Application;
use Console\Helper\Log as LogHelper;

try {
    $application = new Application();
    $application->add(new ImportUpgrade());
    $application->add(new ImportNewsletter());
    $application->add(new ImportPortalReservation());
    $application->add(new ImportABSEnquiry());
    $application->add(new ImportStructureReservation());
    $application->add(new ImportStoreONE());
	$application->add(new GenerateMailUpToken());
	$application->add(new GetMailUpToken());
	$application->add(new RefreshMailUpToken());
	$application->add(new MaintenanceMailUp());
	$application->add(new RefreshMailUpResources());
	$application->add(new TestMailUp());
    $application->run();

} catch (\Exception $e) {
    print_r($e->getMessage());
    $log = new LogHelper();
	$log->error(sprintf(
		$e->getMessage()
	), $e);

}
